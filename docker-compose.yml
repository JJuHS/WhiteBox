services:
  nginx:
    container_name: ubuntu-nginx-1
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: '/bin/sh -c "nginx -g ''daemon off;''"'
    networks:
      - ssl
      - backend
      - frontend

  certbot:
    container_name: ubuntu-certbot-1
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; certbot renew; done'"
    networks:
      - ssl

  backend:
    container_name: backend
    image: geunwook/backend:latest
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - /usr/bin/ffmpeg:/usr/bin/ffmpeg  
      - /home/ubuntu/upload/temp:/home/ubuntu/upload/temp
    networks:
      - backend
      - ssl
    depends_on:
      - mysql

  frontend:
    container_name: frontend
    image: geunwook/frontend1:latest
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - frontend
      - ssl

  mysql:
    container_name: mysql
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ssafy
      MYSQL_DATABASE: whitebox
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend
      - ssl

networks: 
  ssl:
  backend:
  frontend:

volumes:
  mysql-data:
